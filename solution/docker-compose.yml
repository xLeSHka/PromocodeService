version: '3.0'
services:
  promo_service:
    container_name: promo_container
    build: 
      context: .
    env_file:
      - .env
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    networks:
      - default
    depends_on:
      postgres_prod:
        condition: service_healthy
      redis_prod:
        condition: service_healthy
      antifraud:
        condition: service_started
  postgres_prod:
    container_name: postgres_prod_container
    image: postgres:16.6
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U","${POSTGRES_USER}","-d", "${POSTGRES_DB}"]
      interval: 5s
      timeout: 30s
      retries: 3
      start_period: 10s
      start_interval: 5s
    networks:
      - default
  redis_prod:
    image: redis:7.4
    container_name: redis_prod_container
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3
      start_period: 10s
      start_interval: 5s
    networks:
      - default
  antifraud:
    image: lodthe/prod-backend-antifraud:latest
    container_name: antifraud
    environment:
      - SERVER_PORT=9090
      - CACHE_DURATION_MS=5000
    ports:
      - 9090:9090
    networks:
      - default
networks:
  default:
volumes:
  redis_data:
  postgres_data: